{"ast":null,"code":"import _objectWithoutProperties from \"/Users/laurenanne/Desktop/Software Engineering/50_Capstone2/PantryInventoryApp/pantry-frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/laurenanne/Desktop/Software Engineering/50_Capstone2/PantryInventoryApp/pantry-frontend/src/routes-nav/ProtectedRoutes.js\";\nimport React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport AuthContext from \"../auth/AuthContext\";\nfunction ProtectedRoute(_ref) {\n  var Component = _ref.component,\n    rest = _objectWithoutProperties(_ref, [\"component\"]);\n  //if there are paramaters grabs the parameter id\n  var id = rest.computedMatch.params;\n  var auth = useContext(AuthContext);\n  var isLoggedIn = auth.isLoggedIn;\n  console.log(isLoggedIn);\n\n  //if the user is logged in then allows the protected route to be rendered\n  // otherwise user is redirected to home screen\n  return /*#__PURE__*/React.createElement(Route, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, !isLoggedIn ? /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(Component, Object.assign({}, rest, {\n    params: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  })));\n}\nexport default ProtectedRoute;","map":{"version":3,"names":["React","useContext","Route","Redirect","AuthContext","ProtectedRoute","_ref","Component","component","rest","_objectWithoutProperties","id","computedMatch","params","auth","isLoggedIn","console","log","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","to","Object","assign"],"sources":["/Users/laurenanne/Desktop/Software Engineering/50_Capstone2/PantryInventoryApp/pantry-frontend/src/routes-nav/ProtectedRoutes.js"],"sourcesContent":["import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport AuthContext from \"../auth/AuthContext\";\n\nfunction ProtectedRoute({ component: Component, ...rest }) {\n  //if there are paramaters grabs the parameter id\n  const id = rest.computedMatch.params;\n\n  const auth = useContext(AuthContext);\n  const isLoggedIn = auth.isLoggedIn;\n  console.log(isLoggedIn);\n\n  //if the user is logged in then allows the protected route to be rendered\n  // otherwise user is redirected to home screen\n  return (\n    <Route>\n      {!isLoggedIn ? (\n        <Redirect to=\"/login\" />\n      ) : (\n        <Component {...rest} params={id} />\n      )}\n    </Route>\n  );\n}\n\nexport default ProtectedRoute;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AAClD,OAAOC,WAAW,MAAM,qBAAqB;AAE7C,SAASC,cAAcA,CAAAC,IAAA,EAAoC;EAAA,IAAtBC,SAAS,GAAAD,IAAA,CAApBE,SAAS;IAAgBC,IAAI,GAAAC,wBAAA,CAAAJ,IAAA;EACrD;EACA,IAAMK,EAAE,GAAGF,IAAI,CAACG,aAAa,CAACC,MAAM;EAEpC,IAAMC,IAAI,GAAGb,UAAU,CAACG,WAAW,CAAC;EACpC,IAAMW,UAAU,GAAGD,IAAI,CAACC,UAAU;EAClCC,OAAO,CAACC,GAAG,CAACF,UAAU,CAAC;;EAEvB;EACA;EACA,oBACEf,KAAA,CAAAkB,aAAA,CAAChB,KAAK;IAAAiB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACH,CAACT,UAAU,gBACVf,KAAA,CAAAkB,aAAA,CAACf,QAAQ;IAACsB,EAAE,EAAC,QAAQ;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,gBAExBxB,KAAA,CAAAkB,aAAA,CAACX,SAAS,EAAAmB,MAAA,CAAAC,MAAA,KAAKlB,IAAI;IAAEI,MAAM,EAAEF,EAAG;IAAAQ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAE,CAE/B,CAAC;AAEZ;AAEA,eAAenB,cAAc"},"metadata":{},"sourceType":"module"}