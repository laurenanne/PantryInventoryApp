{"ast":null,"code":"var _jsxFileName = \"/Users/laurenanne/Desktop/Software Engineering/50_Capstone2/PantryInventoryApp/pantry-frontend/src/routes-nav/ProtectedRoutes.js\";\nimport React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport UserContext from \"../auth/UserContext\";\nfunction ProtectedRoute(_ref) {\n  var exact = _ref.exact,\n    path = _ref.path,\n    children = _ref.children;\n  //if there are paramaters grabs the parameter id\n  var _useContext = useContext(UserContext),\n    currentUser = _useContext.currentUser;\n  console.debug(\"PrivateRoute\", \"exact=\", exact, \"path=\", path, \"currentUser=\", currentUser);\n  if (!currentUser) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 12\n      }\n    });\n  }\n  return /*#__PURE__*/React.createElement(Route, {\n    exact: exact,\n    path: path,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, children);\n}\n//   const auth = useContext(AuthContext);\n//   const isLoggedIn = auth.isLoggedIn;\n//   console.log(isLoggedIn);\n//   console.log(Component);\n//   //if the user is logged in then allows the protected route to be rendered\n//   // otherwise user is redirected to home screen\n//   return (\n//     <Route>\n//       {!isLoggedIn ? (\n//         <Redirect to=\"/login\" />\n//       ) : (\n//         <Component {...rest} params={id} />\n//       )}\n//     </Route>\n//   );\n// }\n\nexport default ProtectedRoute;","map":{"version":3,"names":["React","useContext","Route","Redirect","UserContext","ProtectedRoute","_ref","exact","path","children","_useContext","currentUser","console","debug","createElement","to","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/laurenanne/Desktop/Software Engineering/50_Capstone2/PantryInventoryApp/pantry-frontend/src/routes-nav/ProtectedRoutes.js"],"sourcesContent":["import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport UserContext from \"../auth/UserContext\";\n\nfunction ProtectedRoute({ exact, path, children }) {\n  //if there are paramaters grabs the parameter id\n  const { currentUser } = useContext(UserContext);\n\n  console.debug(\n    \"PrivateRoute\",\n    \"exact=\",\n    exact,\n    \"path=\",\n    path,\n    \"currentUser=\",\n    currentUser\n  );\n\n  if (!currentUser) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return (\n    <Route exact={exact} path={path}>\n      {children}\n    </Route>\n  );\n}\n//   const auth = useContext(AuthContext);\n//   const isLoggedIn = auth.isLoggedIn;\n//   console.log(isLoggedIn);\n//   console.log(Component);\n//   //if the user is logged in then allows the protected route to be rendered\n//   // otherwise user is redirected to home screen\n//   return (\n//     <Route>\n//       {!isLoggedIn ? (\n//         <Redirect to=\"/login\" />\n//       ) : (\n//         <Component {...rest} params={id} />\n//       )}\n//     </Route>\n//   );\n// }\n\nexport default ProtectedRoute;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AAClD,OAAOC,WAAW,MAAM,qBAAqB;AAE7C,SAASC,cAAcA,CAAAC,IAAA,EAA4B;EAAA,IAAzBC,KAAK,GAAAD,IAAA,CAALC,KAAK;IAAEC,IAAI,GAAAF,IAAA,CAAJE,IAAI;IAAEC,QAAQ,GAAAH,IAAA,CAARG,QAAQ;EAC7C;EAAA,IAAAC,WAAA,GACwBT,UAAU,CAACG,WAAW,CAAC;IAAvCO,WAAW,GAAAD,WAAA,CAAXC,WAAW;EAEnBC,OAAO,CAACC,KAAK,CACX,cAAc,EACd,QAAQ,EACRN,KAAK,EACL,OAAO,EACPC,IAAI,EACJ,cAAc,EACdG,WACF,CAAC;EAED,IAAI,CAACA,WAAW,EAAE;IAChB,oBAAOX,KAAA,CAAAc,aAAA,CAACX,QAAQ;MAACY,EAAE,EAAC,QAAQ;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAAC;EACjC;EAEA,oBACErB,KAAA,CAAAc,aAAA,CAACZ,KAAK;IAACK,KAAK,EAAEA,KAAM;IAACC,IAAI,EAAEA,IAAK;IAAAQ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC7BZ,QACI,CAAC;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeJ,cAAc"},"metadata":{},"sourceType":"module"}